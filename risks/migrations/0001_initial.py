# -*- coding: utf-8 -*-
# Generated by Django 1.11.16 on 2018-12-18 15:15
from __future__ import unicode_literals

import datetime
from django.conf import settings
import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields.jsonb
import django.contrib.postgres.indexes
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields
import risks.models.entity
import risks.models.risk_app
import risks.models.user


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('layers', '0033_auto_20180606_1543'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('base', '0034_auto_20180606_1543'),
        ('people', '0028_auto_20180606_1543'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdministrativeData',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('indicator_type', models.CharField(max_length=50)),
                ('unit_of_measure', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'risks_administrative_data',
            },
            bases=(risks.models.entity.LocationAware, models.Model),
        ),
        migrations.CreateModel(
            name='AdministrativeDataValue',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('dimension', models.CharField(db_index=True, max_length=50)),
                ('value', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'risks_administrative_data_value',
            },
        ),
        migrations.CreateModel(
            name='AdministrativeDivision',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(db_index=True, max_length=30, unique=True)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
                ('level', models.IntegerField()),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='risks.AdministrativeDivision')),
            ],
            options={
                'ordering': ['code', 'name'],
                'db_table': 'risks_administrativedivision',
                'verbose_name_plural': 'Administrative Divisions',
            },
            bases=(risks.models.risk_app.RiskAppAware, risks.models.entity.LocationAware, risks.models.entity.Exportable, models.Model),
        ),
        migrations.CreateModel(
            name='AnalysisType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=30)),
                ('title', models.CharField(max_length=80)),
                ('description', models.TextField(default=b'', null=True)),
                ('scope', models.CharField(choices=[(b'risk', b'Risk'), (b'event', b'Event')], default=(b'risk', b'Risk'), max_length=25)),
                ('fa_icon', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'ordering': ['name'],
                'db_table': 'risks_analysis_type',
            },
            bases=(risks.models.risk_app.RiskAppAware, risks.models.entity.HazardTypeAware, risks.models.entity.LocationAware, risks.models.entity.Exportable, models.Model),
        ),
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('details', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('entity_type', models.CharField(choices=[(b'asset', b'asset'), (b'event', b'event')], default=b'asset', max_length=20)),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='AssetAttributeValue',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('value', models.CharField(max_length=255)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risks.Asset')),
            ],
        ),
        migrations.CreateModel(
            name='AssetAttributeValueDate',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('data_type', models.CharField(default=b'date', max_length=25)),
                ('value', models.DateField()),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risks.Asset')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AssetAttributeValueDecimal',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('data_type', models.CharField(default=b'decimal', max_length=25)),
                ('value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risks.Asset')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AssetAttributeValueInt',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('data_type', models.CharField(default=b'int', max_length=25)),
                ('value', models.IntegerField()),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risks.Asset')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AssetAttributeValueText',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('data_type', models.CharField(default=b'text', max_length=25)),
                ('value', models.TextField()),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risks.Asset')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AssetAttributeValueVarchar',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('data_type', models.CharField(default=b'varchar', max_length=25)),
                ('value', models.CharField(max_length=255)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risks.Asset')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AssetCategory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Asset categories',
            },
        ),
        migrations.CreateModel(
            name='AssetItem',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risks.Asset')),
            ],
        ),
        migrations.CreateModel(
            name='AttributeSet',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='DamageAssessment',
            fields=[
                ('state', models.CharField(choices=[(b'queued', b'Queued'), (b'processing', b'Processing'), (b'ready', b'Ready'), (b'error', b'Error'), (b'draft', b'Draft')], default=b'ready', max_length=64)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('unit_of_measure', models.CharField(blank=True, max_length=255, null=True)),
                ('tags', models.CharField(blank=True, max_length=255, null=True)),
                ('assessment_date', models.DateField()),
                ('insert_date', models.DateField(default=datetime.date.today)),
                ('descriptor_file', models.FileField(max_length=255, upload_to=b'descriptor_files')),
                ('data_file', models.FileField(max_length=255, upload_to=b'data_files')),
                ('metadata_file', models.FileField(max_length=255, upload_to=b'metadata_files')),
                ('analysis_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='damageass_analysistype', to='risks.AnalysisType')),
            ],
            options={
                'ordering': ['name'],
                'db_table': 'risks_damage_assessment',
                'verbose_name_plural': 'Damage Assessments',
            },
            bases=(risks.models.risk_app.RiskAppAware, models.Model, risks.models.entity.LocationAware, risks.models.entity.HazardTypeAware, risks.models.entity.AnalysisTypeAware, risks.models.entity.Exportable),
        ),
        migrations.CreateModel(
            name='DamageAssessmentCreate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descriptor_file', models.FileField(max_length=255, upload_to=b'descriptor_files')),
            ],
            options={
                'ordering': ['descriptor_file'],
                'db_table': 'risks_descriptor_files',
                'verbose_name': 'Damage Assessment: Create new through a .ini                         descriptor file',
                'verbose_name_plural': 'Damage Assessment: Create new through a .ini                                descriptor file',
            },
        ),
        migrations.CreateModel(
            name='DamageAssessmentImportData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_file', models.FileField(max_length=255, upload_to=b'data_files')),
                ('damage_assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risks.DamageAssessment')),
            ],
            options={
                'ordering': ['riskapp', 'region', 'damage_assessment'],
                'db_table': 'risks_data_files',
                'verbose_name': 'Damage Assessment: Import Risk Data from XLSX file',
                'verbose_name_plural': 'Damage Assessment: Import Risk Data from XLSX file',
            },
        ),
        migrations.CreateModel(
            name='DamageAssessmentImportMetadata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metadata_file', models.FileField(max_length=255, upload_to=b'metadata_files')),
                ('damage_assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risks.DamageAssessment')),
            ],
            options={
                'ordering': ['riskapp', 'region', 'damage_assessment'],
                'db_table': 'risks_metadata_files',
                'verbose_name': 'Damage Assessment: Import or Update Metadata from                         XLSX file',
                'verbose_name_plural': 'Damage Assessment: Import or Update Metadata                                from XLSX file',
            },
        ),
        migrations.CreateModel(
            name='DamageAssessmentValue',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('damage_assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risks.DamageAssessment')),
            ],
        ),
        migrations.CreateModel(
            name='DamageType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=30)),
                ('abstract', models.TextField()),
                ('unit', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='DamageTypeValue',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('dimension', models.CharField(choices=[(b'dim1', b'dim1'), (b'dim2', b'dim2'), (b'dim3', b'dim3')], max_length=50)),
                ('order', models.IntegerField()),
                ('value', models.CharField(db_index=True, max_length=80)),
                ('axis', models.CharField(db_index=True, max_length=10)),
                ('scenario_description', models.CharField(blank=True, max_length=255, null=True)),
                ('layer_attribute', models.CharField(max_length=80)),
                ('layer_reference_attribute', models.CharField(blank=True, max_length=80, null=True)),
                ('damage_assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='damagetype_association', to='risks.DamageAssessment')),
                ('damage_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='damageassessment_association', to='risks.DamageType')),
            ],
            options={
                'ordering': ['order', 'value'],
                'db_table': 'risks_damage_type_value',
            },
        ),
        migrations.CreateModel(
            name='DataProvider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'risks_data_provider',
            },
        ),
        migrations.CreateModel(
            name='DataProviderMappings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider_value', models.CharField(max_length=80)),
                ('rdh_value', models.CharField(max_length=80)),
                ('data_provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risks.DataProvider')),
            ],
            options={
                'db_table': 'risks_data_provider_mappings',
                'verbose_name': 'DataProviderMappings',
                'verbose_name_plural': 'DataProviderMappings',
            },
        ),
        migrations.CreateModel(
            name='DymensionInfoFurtherResourceAssociation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('damage_assessment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='risks.DamageAssessment')),
                ('dimension_info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risks.DamageType')),
            ],
        ),
        migrations.CreateModel(
            name='EavAttribute',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('entity_type', models.CharField(choices=[(b'asset', b'asset'), (b'event', b'event')], max_length=25)),
                ('code', models.CharField(max_length=30)),
                ('name', models.CharField(max_length=50)),
                ('data_type', models.CharField(choices=[(b'int', b'int'), (b'decimal', b'decimal'), (b'varchar', b'varchar'), (b'text', b'text'), (b'date', b'date')], max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('details', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('state', models.CharField(choices=[(b'queued', b'Queued'), (b'processing', b'Processing'), (b'ready', b'Ready'), (b'error', b'Error'), (b'draft', b'Draft')], default=b'ready', max_length=64)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('entity_type', models.CharField(choices=[(b'asset', b'asset'), (b'event', b'event')], default=b'event', max_length=20)),
                ('code', models.CharField(blank=True, db_index=True, max_length=25, null=True)),
                ('year', models.IntegerField(blank=True, db_index=True, null=True)),
                ('begin_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('attribute_set', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risks.AttributeSet')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='risks.AdministrativeDivision')),
            ],
            options={
                'db_table': 'risks_event',
            },
            bases=(risks.models.risk_app.RiskAppAware, risks.models.entity.LocationAware, risks.models.entity.HazardTypeAware, risks.models.entity.Exportable, models.Model),
        ),
        migrations.CreateModel(
            name='EventImport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_file', models.FileField(max_length=255, upload_to=b'data_files')),
            ],
            options={
                'ordering': ['riskapp', 'region'],
                'db_table': 'risks_data_event_files',
                'verbose_name': 'Events: Import Data (Main) from XLSX file',
                'verbose_name_plural': 'Events: Import Data (Main) from XLSX file',
            },
        ),
        migrations.CreateModel(
            name='EventImportDamage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_file', models.FileField(max_length=255, upload_to=b'data_files')),
                ('allow_null_values', models.BooleanField(default=False)),
                ('adm_level_precision', models.CharField(choices=[(b'1', b'Country'), (b'2', b'Nuts3')], default=b'1', max_length=10)),
                ('damage_assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risks.DamageAssessment')),
            ],
            options={
                'ordering': ['riskapp', 'region', 'damage_assessment', 'adm_level_precision'],
                'db_table': 'risks_event_damage_files',
                'verbose_name': 'Damage Assessment: Import Events Data (Attributes) from XLSX file',
                'verbose_name_plural': 'Damage Assessment: Import Events Data (Atributes) from XLSX file',
            },
        ),
        migrations.CreateModel(
            name='FurtherResource',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('text', models.TextField()),
            ],
            options={
                'db_table': 'risks_further_resource',
            },
        ),
        migrations.CreateModel(
            name='Hazard',
            fields=[
                ('state', models.CharField(choices=[(b'queued', b'Queued'), (b'processing', b'Processing'), (b'ready', b'Ready'), (b'error', b'Error'), (b'draft', b'Draft')], default=b'ready', max_length=64)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('mnemonic', models.CharField(db_index=True, max_length=30)),
                ('title', models.CharField(max_length=80)),
                ('order', models.IntegerField()),
                ('description', models.TextField(default=b'')),
                ('fa_class', models.CharField(default=b'fa-times', max_length=64)),
            ],
            options={
                'ordering': ['order', 'mnemonic'],
                'db_table': 'risks_hazard',
                'verbose_name_plural': 'Hazards',
            },
            bases=(risks.models.risk_app.RiskAppAware, risks.models.entity.LocationAware, risks.models.entity.Exportable, models.Model),
        ),
        migrations.CreateModel(
            name='HazardSet',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('date', models.CharField(max_length=20)),
                ('date_type', models.CharField(max_length=20)),
                ('edition', models.CharField(max_length=30)),
                ('abstract', models.TextField()),
                ('purpose', models.TextField()),
                ('keyword', models.TextField()),
                ('use_contraints', models.CharField(max_length=255)),
                ('other_constraints', models.CharField(max_length=255)),
                ('spatial_representation_type', models.CharField(max_length=150)),
                ('language', models.CharField(max_length=80)),
                ('begin_date', models.CharField(max_length=20)),
                ('end_date', models.CharField(max_length=20)),
                ('bounds', models.CharField(max_length=150)),
                ('supplemental_information', models.CharField(max_length=255)),
                ('online_resource', models.CharField(max_length=255)),
                ('url', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
                ('reference_system_code', models.CharField(max_length=30)),
                ('data_quality_statement', models.TextField()),
            ],
            options={
                'db_table': 'risks_hazard_set',
            },
            bases=(risks.models.entity.Exportable, models.Model),
        ),
        migrations.CreateModel(
            name='HazardSetFurtherResourceAssociation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('hazardset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risks.HazardSet')),
            ],
            options={
                'db_table': 'risks_hazardset_furtheresourceassociation',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('location_type', models.CharField(choices=[(b'fiexd_asset', b'fixed_asset'), (b'non_fixed_asset', b'non_fixed_asset'), (b'people', b'people'), (b'damage', b'damage')], max_length=50)),
                ('address', models.CharField(max_length=100)),
                ('lat', models.CharField(max_length=100)),
                ('lon', models.CharField(max_length=100)),
                ('additional_info', models.TextField(blank=True, null=True)),
                ('administrative_division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='risks.AdministrativeDivision')),
            ],
        ),
        migrations.CreateModel(
            name='MarketValue',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('area_code', models.CharField(blank=True, max_length=50, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risks.AssetItem')),
            ],
        ),
        migrations.CreateModel(
            name='Owner',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Phenomenon',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('begin_date', models.DateField()),
                ('end_date', models.DateField()),
                ('administrative_division', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risks.AdministrativeDivision')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risks.Event')),
            ],
            options={
                'verbose_name_plural': 'Phenomena',
            },
        ),
        migrations.CreateModel(
            name='PointOfContact',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('individual_name', models.CharField(max_length=255)),
                ('organization_name', models.CharField(max_length=255)),
                ('position_name', models.CharField(max_length=255)),
                ('voice', models.CharField(max_length=255)),
                ('facsimile', models.CharField(max_length=30)),
                ('delivery_point', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=80)),
                ('postal_code', models.CharField(max_length=30)),
                ('e_mail', models.CharField(max_length=255)),
                ('role', models.CharField(max_length=255)),
                ('update_frequency', models.TextField()),
                ('administrative_area', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='risks.AdministrativeDivision')),
            ],
            options={
                'db_table': 'risks_point_of_contact',
            },
            bases=(risks.models.entity.Exportable, models.Model),
        ),
        migrations.CreateModel(
            name='RdhUser',
            fields=[
                ('profile_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            bases=('people.profile',),
            managers=[
                ('objects', risks.models.user.RdhUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=30)),
            ],
            options={
                'ordering': ['name'],
                'db_table': 'risks_region',
                'verbose_name_plural': 'Regions',
            },
        ),
        migrations.CreateModel(
            name='RiskApp',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(choices=[(b'data_extraction', b'Data Extraction'), (b'cost_benefit_analysis', b'Cost Benefit Analysis')], max_length=64, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SendaiIndicator',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('description', models.TextField(default=b'', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SendaiTarget',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('description', models.TextField(default=b'', null=True)),
            ],
        ),
        migrations.AddField(
            model_name='sendaiindicator',
            name='sendai_target',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risks.SendaiTarget'),
        ),
        migrations.AddField(
            model_name='rdhuser',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_in_region', to='risks.Region'),
        ),
        migrations.AddField(
            model_name='pointofcontact',
            name='country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='risks.Region'),
        ),
        migrations.AddField(
            model_name='hazardsetfurtherresourceassociation',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='risks.Region'),
        ),
        migrations.AddField(
            model_name='hazardsetfurtherresourceassociation',
            name='resource',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hazard_set', to='risks.FurtherResource'),
        ),
        migrations.AddField(
            model_name='hazardset',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metadata_author', to='risks.PointOfContact'),
        ),
        migrations.AddField(
            model_name='hazardset',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risks.Region'),
        ),
        migrations.AddField(
            model_name='hazardset',
            name='damage_assessment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='damage_assessment', to='risks.DamageAssessment'),
        ),
        migrations.AddField(
            model_name='hazardset',
            name='poc',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='point_of_contact', to='risks.PointOfContact'),
        ),
        migrations.AddField(
            model_name='hazardset',
            name='topic_category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='category', to='base.TopicCategory'),
        ),
        migrations.AddField(
            model_name='hazard',
            name='app',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risks.RiskApp'),
        ),
        migrations.AddField(
            model_name='furtherresource',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='risks_furtherresource', to=settings.AUTH_USER_MODEL, verbose_name=b'Owner'),
        ),
        migrations.AddField(
            model_name='furtherresource',
            name='resource',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resource', to='base.ResourceBase'),
        ),
        migrations.AddField(
            model_name='eventimportdamage',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risks.Region'),
        ),
        migrations.AddField(
            model_name='eventimportdamage',
            name='riskapp',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risks.RiskApp'),
        ),
        migrations.AddField(
            model_name='eventimport',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risks.Region'),
        ),
        migrations.AddField(
            model_name='eventimport',
            name='riskapp',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risks.RiskApp'),
        ),
        migrations.AddField(
            model_name='event',
            name='hazard_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='risks.Hazard'),
        ),
        migrations.AddField(
            model_name='event',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='risks.Region'),
        ),
        migrations.AddField(
            model_name='dymensioninfofurtherresourceassociation',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='risks.Region'),
        ),
        migrations.AddField(
            model_name='dymensioninfofurtherresourceassociation',
            name='resource',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risks.FurtherResource'),
        ),
        migrations.AddField(
            model_name='damagetypevalue',
            name='resource',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='risks.FurtherResource'),
        ),
        migrations.AddField(
            model_name='damagetypevalue',
            name='sendai_indicator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='risks.SendaiIndicator'),
        ),
        migrations.AddField(
            model_name='damageassessmentvalue',
            name='damage_type_value_1',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessment_dim1', to='risks.DamageTypeValue'),
        ),
        migrations.AddField(
            model_name='damageassessmentvalue',
            name='damage_type_value_2',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessment_dim2', to='risks.DamageTypeValue'),
        ),
        migrations.AddField(
            model_name='damageassessmentvalue',
            name='damage_type_value_3',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assessment_dim3', to='risks.DamageTypeValue'),
        ),
        migrations.AddField(
            model_name='damageassessmentvalue',
            name='item',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assessed_damage', to='risks.AssetItem'),
        ),
        migrations.AddField(
            model_name='damageassessmentvalue',
            name='linked_item',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='related_assessed_damage', to='risks.AssetItem'),
        ),
        migrations.AddField(
            model_name='damageassessmentvalue',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='damage_location', to='risks.Location'),
        ),
        migrations.AddField(
            model_name='damageassessmentvalue',
            name='phenomenon',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risks.Phenomenon'),
        ),
        migrations.AddField(
            model_name='damageassessmentimportmetadata',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risks.Region'),
        ),
        migrations.AddField(
            model_name='damageassessmentimportmetadata',
            name='riskapp',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risks.RiskApp'),
        ),
        migrations.AddField(
            model_name='damageassessmentimportdata',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risks.Region'),
        ),
        migrations.AddField(
            model_name='damageassessmentimportdata',
            name='riskapp',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risks.RiskApp'),
        ),
        migrations.AddField(
            model_name='damageassessment',
            name='app',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risks.RiskApp'),
        ),
        migrations.AddField(
            model_name='damageassessment',
            name='damage_types',
            field=models.ManyToManyField(through='risks.DamageTypeValue', to='risks.DamageType'),
        ),
        migrations.AddField(
            model_name='damageassessment',
            name='hazard',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='damageass_hazard', to='risks.Hazard'),
        ),
        migrations.AddField(
            model_name='damageassessment',
            name='items',
            field=models.ManyToManyField(related_name='assessment_for_item', through='risks.DamageAssessmentValue', to='risks.AssetItem'),
        ),
        migrations.AddField(
            model_name='damageassessment',
            name='layer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='base_layer', to='layers.Layer'),
        ),
        migrations.AddField(
            model_name='damageassessment',
            name='locations',
            field=models.ManyToManyField(related_name='assessment_for_location', through='risks.DamageAssessmentValue', to='risks.Location'),
        ),
        migrations.AddField(
            model_name='damageassessment',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='risks_damageassessment', to=settings.AUTH_USER_MODEL, verbose_name=b'Owner'),
        ),
        migrations.AddField(
            model_name='damageassessment',
            name='phenomena',
            field=models.ManyToManyField(related_name='assessment_for_phenomenon', through='risks.DamageAssessmentValue', to='risks.Phenomenon'),
        ),
        migrations.AddField(
            model_name='damageassessment',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='damageass_region', to='risks.Region'),
        ),
        migrations.AddField(
            model_name='damageassessment',
            name='style',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='style_layer', to='layers.Style'),
        ),
        migrations.AddField(
            model_name='attributeset',
            name='attributes',
            field=models.ManyToManyField(to='risks.EavAttribute'),
        ),
        migrations.AddField(
            model_name='assetattributevaluevarchar',
            name='attribute',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risks.EavAttribute'),
        ),
        migrations.AddField(
            model_name='assetattributevaluetext',
            name='attribute',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risks.EavAttribute'),
        ),
        migrations.AddField(
            model_name='assetattributevalueint',
            name='attribute',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risks.EavAttribute'),
        ),
        migrations.AddField(
            model_name='assetattributevaluedecimal',
            name='attribute',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risks.EavAttribute'),
        ),
        migrations.AddField(
            model_name='assetattributevaluedate',
            name='attribute',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risks.EavAttribute'),
        ),
        migrations.AddField(
            model_name='assetattributevalue',
            name='attribute',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risks.EavAttribute'),
        ),
        migrations.AddField(
            model_name='asset',
            name='attribute_set',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risks.AttributeSet'),
        ),
        migrations.AddField(
            model_name='asset',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risks.AssetCategory'),
        ),
        migrations.AddField(
            model_name='asset',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risks.Location'),
        ),
        migrations.AddField(
            model_name='asset',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risks.Owner'),
        ),
        migrations.AddField(
            model_name='analysistype',
            name='app',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risks.RiskApp'),
        ),
        migrations.AddField(
            model_name='administrativedatavalue',
            name='adm',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_association', to='risks.AdministrativeDivision'),
        ),
        migrations.AddField(
            model_name='administrativedatavalue',
            name='data',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='administrativedivision_association', to='risks.AdministrativeData'),
        ),
        migrations.AlterUniqueTogether(
            name='location',
            unique_together=set([('lat', 'lon', 'administrative_division')]),
        ),
        migrations.AddIndex(
            model_name='event',
            index=django.contrib.postgres.indexes.GinIndex(fields=[b'details'], name=b'event_detail_gin'),
        ),
        migrations.AddIndex(
            model_name='asset',
            index=django.contrib.postgres.indexes.GinIndex(fields=[b'details'], name=b'asset_details_gin'),
        ),
    ]
